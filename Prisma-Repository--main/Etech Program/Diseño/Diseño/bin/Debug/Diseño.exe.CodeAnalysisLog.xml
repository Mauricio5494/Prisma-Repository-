<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files\microsoft visual studio\2022\professional\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="17.0">
 <Targets>
  <Target Name="C:\Users\Colàgeno\Documents\GitHub\Prisma-Repository-\Prisma-Repository--main\Etech Program\Diseño\Diseño\bin\Debug\Diseño.exe">
   <Modules>
    <Module Name="diseño.exe">
     <Namespaces>
      <Namespace Name="SqlServerTypes">
       <Types>
        <Type Name="Utilities" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LoadLibrary(System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2023-06-06 23:31:59Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Puesto que es un método P/Invoke, se debe definir 'Utilities.LoadLibrary(string)' en una clase con el nombre NativeMethods, SafeNativeMethods o UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2023-06-06 23:31:59Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="75" Level="Error">Para reducir el riesgo de la seguridad, serialice el parámetro 'libname' como Unicode, estableciendo DllImport.CharSet en CharSet.Unicode, o bien serializando el parámetro de forma explícita como UnmanagedType.LPWStr. Si necesita serializar esta cadena como ANSI o dependiente del sistema, establezca BestFitMapping=false. Para mayor seguridad, establezca también ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>Mueva P/Invokes a la clase NativeMethods</Name>
   <Description>Este tipo contiene miembros con el atributo DllImport. Los miembros con el atributo DllImport deben estar contenidos en clases denominadas NativeMethods, SafeNativeMethods o UnsafeNativeMethods.</Description>
   <Resolution Name="Default">Puesto que es un método P/Invoke, se debe definir {0} en una clase con el nombre NativeMethods, SafeNativeMethods o UnsafeNativeMethods.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101">
   <Name>Especifique serialización para argumentos de cadena P/Invoke</Name>
   <Description>Cuando se serializan cadenas como ANSI (o Auto en Win9x), es posible que cambien algunos caracteres. Si está activada la asignación de ajuste perfecto, en las cadenas que aparecen diferentes en Unicode se serializarán como cadenas ANSI idénticas, lo que puede dar lugar a decisiones de seguridad incorrectas. Si se desactiva la asignación de ajuste perfecto, se reduce el riesgo, ya que a todos los caracteres sin equivalente se les asigna '?'. Asimismo, tenga en cuenta que CharSet.Ansi es el valor predeterminado para todas las operaciones de serialización de cadenas. La serialización Unicode se debe especificar de forma explícita, ya sea con el valor CharSet de DllImport o StructLayout, o bien con el atributo MarshalAs con un tipo Unicode no administrado (o dependiente del sistema).</Description>
   <Resolution Name="Parameter">Para reducir el riesgo de la seguridad, serialice el parámetro {0} como Unicode, estableciendo DllImport.CharSet en CharSet.Unicode, o bien serializando el parámetro de forma explícita como UnmanagedType.LPWStr. Si necesita serializar esta cadena como ANSI o dependiente del sistema, establezca BestFitMapping=false. Para mayor seguridad, establezca también ThrowOnUnmappableChar=true.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182319.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="17.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Categoría</String>
  <String Key="Certainty">Certeza</String>
  <String Key="CollapseAll">Contraer todo</String>
  <String Key="CheckId">Comprobar id.</String>
  <String Key="Error">Error</String>
  <String Key="Errors">errores</String>
  <String Key="ExpandAll">Expandir todo</String>
  <String Key="Help">Ayuda</String>
  <String Key="Line">Línea</String>
  <String Key="Messages">mensajes</String>
  <String Key="LocationNotStoredInPdb">[Ubicación no almacenada en Pdb]</String>
  <String Key="Project">Proyecto</String>
  <String Key="Resolution">Resolución</String>
  <String Key="Rule">Regla</String>
  <String Key="RuleFile">Archivo de regla</String>
  <String Key="RuleDescription">Descripción de la regla</String>
  <String Key="Source">Origen</String>
  <String Key="Status">Estado</String>
  <String Key="Target">Círculos concéntricos</String>
  <String Key="Warning">Advertencia</String>
  <String Key="Warnings">advertencias</String>
  <String Key="ReportTitle">Informe de Code Analysis</String>
 </Localized>
</FxCopReport>
